#!/bin/bash
set -e

function help {
    cat << EOF >&2
usage: vantage __env [NAME [VALUE]]

Commands:

    vg __env - Print the current environment
    vg __env NAME - Print the value of a single variable
    vg __end NAME VALUE - Save an env variable

See the GitHub repo for more details (https://github.com/vantage-org/vantage)

EOF
}

function print_env {
    here=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    env -i "$here/cave" "$1"
}

if [ -n "$VG_SHOW_HELP" ]; then
    help
    exit
fi

case "$#" in
    0)
        # Print entire env
        print_env "$VG_ENV_FILE"
        ;;
    1)
        # Print value of variable
        var="$1"
        echo "${!var}"
        ;;
    2)
        # Save value to env file
        ENV_FILE="$VG_DEFAULT_ENV"
        if [ -n "$VG_NAMED_ENV" ]; then
            ENV_FILE="$VG_NAMED_ENV"
        fi
        if [ -n "$ENV_FILE" ]; then
            echo "$1=$2" >> "$ENV_FILE"
            ENV=$(print_env "$ENV_FILE")
            echo "$ENV" > "$ENV_FILE"
        fi
        ;;
    *)
        echo "vantage: __env: Too many arguments" >&2
        help
        exit 1
esac
