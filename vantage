#!/bin/bash

install_dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
export VG_INSTALL_DIR="$install_dir"

# Step One: Get the app directory

# Check if there's a command line argument setting it
while getopts ":a:" opt; do
    case $opt in
        a)
            export VG_APP_DIR="$OPTARG"
            ;;
        :)
            echo "Set -a to point to your app's root directory" >&2
            exit 1
            ;;
    esac
done

# If not, try finding a .vantage file in PWD or above
if [ -z "$VG_APP_DIR" ]; then
    export VG_APP_DIR="$PWD"
    while true; do
        if [ -f "$VG_APP_DIR/.vantage" ]; then
            break
        else
            if [ "$VG_APP_DIR" = "/" ]; then
                export VG_APP_DIR=""
                break
            fi
            up=$(dirname "$VG_APP_DIR")
            export VG_APP_DIR="$up"
        fi
    done
fi

# Finally, default to $PWD
if [ -z "$VG_APP_DIR" ]; then
    export VG_APP_DIR="$PWD"
fi


# Step Two: Compile the environment

# We might be a child process of another vantage call, save the parent ENV file
export VG_PARENT_ENV="$VG_ENV_FILE"

# Create a new, temporary, file for our process
temp_file=$(mktemp)
export VG_ENV_FILE="$temp_file"

if [ -n "$VG_PARENT_ENV" ]; then
    # If there's a parent env file, use that as the base
    cat "$VG_PARENT_ENV" >> "$VG_ENV_FILE"
else
    # If not we'll have to create our own base
    # If there's a .vantage file in the app directory, load it
    if [ -f "$VG_APP_DIR/.vantage" ]; then
        cat "$VG_APP_DIR/.vantage" >> "$VG_ENV_FILE"
        export $(cat "$VG_ENV_FILE" | xargs)
    fi
    # Try to find a default env, load that
    if [ -n "$VG_DEFAULT_ENV" ]; then
        cat "$VG_DEFAULT_ENV" >> "$VG_ENV_FILE"
        export $(cat "$VG_ENV_FILE" | xargs)
    fi
fi

# Load env files provided on the command line

while getopts ":e:" opt; do
    case $opt in
        e)
            if [ ! -f "$OPTARG" ]; then
                OPTARG="$VG_ENV_DIR/OPTARG"
            fi
            if [ ! -f "$OPTARG" ]; then
                echo "Couldn't find the env file at $OPTARG" >&2
                exit 1
            fi
            export VG_NAMED_ENV_FILE="$OPTARG"
            cat "$OPTARG" >> "$VG_ENV_FILE"
            ;;
        :)
            echo "Use -e to provide an env file -e PATH" >&2
            exit 1
            ;;
    esac
done

# Load variables set on the command line

while getopts ":v:" opt; do
    case $opt in
        v)
        case "$OPTARG" in
            *=*)
                # All's good
                ;;
            *)
                echo "Variable format must be KEY=VALUE" >&2
                exit 1
                ;;
        esac
            echo "$OPTARG" >> "$VG_ENV_FILE"
            ;;
        :)
            echo "Use -v to provide a variable: -v KEY=VALUE" >&2
            exit 1
            ;;
    esac
done

export $(cat "$VG_ENV_FILE" | xargs)

eval "$@"
